name: Build PVE KVM images
on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build_pve_kvm_images:
    runs-on: pve-1
    steps:
    - uses: actions/checkout@v2

    - name: check path
      run: |
        pwd

    - name: Configure Git
      run: |
        git config --global user.name "daily-update"
        git config --global user.email "tg@spiritlhl.top"

    - name: Environment preparation
      run: |
        export LIBGUESTFS_DEBUG=1
        export LIBGUESTFS_TRACE=1
        sudo apt-get update
        sudo apt-get install -y curl wget unzip zip jq
        sudo apt-get install -y libguestfs-tools rng-tools curl
        sudo apt-get install -y libguestfs-tools rng-tools curl --fix-missing
        curl -o rebuild_qcow2.sh https://raw.githubusercontent.com/Ivaneus/pve_kvm_images/main/rebuild_qcow2.sh
        chmod 777 rebuild_qcow2.sh

    - name: Download qcow2
      run: | 
        #curl -m 60 -o almalinux8.qcow2 "https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/AlmaLinux-8-GenericCloud-latest.x86_64.qcow2"
        #curl -m 60 -o almalinux9.qcow2 "https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/AlmaLinux-9-GenericCloud-latest.x86_64.qcow2"
        #curl -m 60 -o almalinux10.qcow2 "https://repo.almalinux.org/almalinux/8/cloud/x86_64/images/AlmaLinux-10-GenericCloud-latest.x86_64.qcow2"
        #curl -m 60 -o rockylinux8.qcow2 "https://dl.rockylinux.org/pub/rocky/8/images/x86_64/Rocky-8-GenericCloud-Base.latest.x86_64.qcow2"
        #curl -m 60 -o rockylinux9.qcow2 "https://dl.rockylinux.org/pub/rocky/9/images/x86_64/Rocky-9-GenericCloud-Base.latest.x86_64.qcow2"
        #curl -m 60 -o debian10.qcow2 "https://cloud.debian.org/images/cloud/buster/latest/debian-10-generic-amd64.qcow2"
        #curl -m 60 -o debian11.qcow2 "https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-generic-amd64.qcow2"
        #curl -m 60 -o debian12.qcow2 "https://cloud.debian.org/images/cloud/bookworm/latest/debian-12-generic-amd64.qcow2"        
        #curl -m 60 -o centos7.qcow2 "https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2"
        #curl -m 60 -o centos8.qcow2 "https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-x86_64-8-latest.x86_64.qcow2"
        #curl -m 60 -o centos9.qcow2 "https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-x86_64-9-latest.x86_64.qcow2"
        #curl -m 60 -o centos10.qcow2 "https://cloud.centos.org/centos/10-stream/x86_64/images/CentOS-Stream-GenericCloud-x86_64-10-latest.x86_64.qcow2"
        curl -m 60 -o alpinestable.qcow2 "https://dl-cdn.alpinelinux.org/alpine/v3.22/releases/cloud/generic_alpine-3.22.0-x86_64-bios-cloudinit-r0.qcow2"
        #curl -m 60 -o ubuntu18.img "https://cloud-images.ubuntu.com/releases/bionic/release/ubuntu-18.04-server-cloudimg-amd64.img"
        #curl -m 60 -o ubuntu20.img "https://cloud-images.ubuntu.com/releases/focal/release/ubuntu-20.04-server-cloudimg-amd64-disk-kvm.img"
        #curl -m 60 -o ubuntu22.img "https://cloud-images.ubuntu.com/releases/jammy/release/ubuntu-22.04-server-cloudimg-amd64-disk-kvm.img"
        #curl -m 60 -o ubuntu24.img "https://cloud-images.ubuntu.com/releases/noble/release/ubuntu-24.04-server-cloudimg-amd64.img"
        #qemu-img convert -f raw ubuntu18.img -O qcow2 ubuntu18.qcow2
        #qemu-img convert -f raw ubuntu20.img -O qcow2 ubuntu20.qcow2
        #qemu-img convert -f raw ubuntu22.img -O qcow2 ubuntu22.qcow2
        #qemu-img convert -f raw ubuntu24.img -O qcow2 ubuntu24.qcow2

        images=($(ls -1 | grep qcow2))
        if [ ${#images[@]} -gt 0 ]; then
            for image in "${images[@]}"; do
                echo "$image"
                chmod 777 $image
                sleep 1
            done
        fi
      
    - name: Build and Upload Images
      run: |
        images=($(ls -1 | grep qcow2))
        if [ ${#images[@]} -gt 0 ]; then
            release_id=$(curl -s -m 6 -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/Ivaneus/pve_kvm_images/releases/tags/images" | jq -r '.id')
            for file in "${images[@]}"; do
                echo "Building and uploading images"
                ./rebuild_qcow2.sh $file
                if [ -f "$file" ] && [ $(stat -c %s "$file") -gt 10485760 ] && [ $(stat -c %s "$file") -le 2147483648 ]; then
                    echo "\nChecking if $file already exists in release..."
                    existing_asset_id=$(curl -s -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/Ivaneus/pve_kvm_images/releases/$release_id/assets" | jq -r --arg name "$(basename "$file")" '.[] | select(.name == $name) | .id')
                    if [ -n "$existing_asset_id" ]; then
                        echo "\nAsset $file already exists in release, deleting existing asset..."
                        delete_response=$(curl -s -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/Ivaneus/pve_kvm_images/releases/assets/$existing_asset_id")
                        echo "\n$delete_response"
                        if [ $? -eq 0 ] && ! echo "$delete_response" | grep -q "error"; then
                            echo "\nExisting asset deleted successfully."
                        else
                            echo "\nFailed to delete existing asset. Skipping file upload..."
                            rm -rf $file
                            continue
                        fi
                    else
                        echo "No $file file."
                    fi
                    echo "\nUploading $file to release..."
                    curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      -H "Content-Type: application/zip" \
                      -T "$file" \
                      "https://uploads.github.com/repos/Ivaneus/pve_kvm_images/releases/$release_id/assets?name=$(basename "$file")"
                    rm -rf $file
                else
                    echo "\nNo $file or less than 10 MB"
                fi
            done
        else
            echo "NO KVM IMAGES"
        fi
        
